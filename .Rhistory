inflate.labels = F)
FY21 %>%
filter(fund_description == "CORPORATE FUND") %>%
mutate(department_description = if_else(
!department_description %in% corp_top_ten$top_ten,
"MISCELLANEOUS",
department_description
)
) %>%
group_by(department_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(perc_total = round((total_app/sum(total_app))*100, 2)) %>%
arrange(desc(total_app)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "Corporate Fund by Department",
col.names = c("Dept Description", "Total Appropriation ($)", "% of Total"),
"simple",
table.placement = "H")
temp <- FY21 %>%
group_by(department_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(perc = round((total_app/sum(total_app))*100, 2)) %>%
arrange(desc(perc)) %>%
view()
temp <- FY21 %>%
filter(fund_code == "0683") %>%
view()
temp <- FY21 %>%
filter(fund_code == "0683") %>%
sum(ordinance_amount) %>%
view()
temp <- FY21 %>%
filter(fund_code == "0683") %>%
sum(total == sum(ordinance_amount)) %>%
view()
temp <- FY21 %>%
filter(fund_code == "0683") %>%
mutate(total == sum(ordinance_amount)) %>%
view()
temp <- FY21 %>%
filter(fund_code == "0683") %>%
summarize(total == sum(ordinance_amount)) %>%
view()
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
rm(list = ls())
library(tidyverse)
library(treemap)
library(kableExtra)
library(scales)
library(ggthemes)
library(RColorBrewer)
library(knitr)
opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
results = 'asis',
fig.align = "center",
fig.pos = "!H",
out.extra = "")
library(formatR)
opts_chunk$set(tidy.opts=list(width.cutoff=60),
tidy=TRUE)
options(scipen = 999)
setwd("C:/Users/uberbot/Desktop/CPD/cpd_new")
budget_ordinances <- read_csv("data/budget_ordinances.csv")
FY21 <- budget_ordinances %>%
filter(year == 2021)
titles_salaries <- read_csv("data/titles_salaries.csv")
ts_FY21 <- titles_salaries %>%
filter(year == 2021,
position_control == "1")
FY21 %>%
group_by(fund_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
treemap(
treemap_2021,
index = c("fund_description"),
vSize = "total_app",
type = "index",
title = "Chicago City Budget Ordinance 2021, ~13.5 Billion",
palette = "GnBu",
fontsize.labels = c(10),
fontcolor.labels = c("black"),
bg.labels=c("transparent"),
align.labels = list(c("left", "top")),
overlap.labels = 0,
inflate.labels = F,
border.lwds = 1)
top_ten_FY21 <- FY21 %>%
group_by(fund_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
arrange(desc(total_app)) %>%
head(10) %>%
rename("top_ten" = fund_description)
FY21 %>%
# label top ten city funds and lump all the rest in 'other category'
mutate(
fund_description = case_when(
!fund_description %in% top_ten_FY21$top_ten ~ "MISCELLANEOUS",
# relabel for sizing
fund_description == "MUNICIPAL ANNUNITY AND BENEFIT" ~ "MUNI PENSION FUND",
fund_description == "FIREMEN'S ANNUITY AND BENEFIT" ~ "CFD PENSION",
fund_description == "MIDWAY AIRPORT FUND" ~ "MIDWAY",
fund_description == "HEAD START AND EARLY HEAD START" ~ "HEAD START",
TRUE ~ fund_description
)
) %>%
group_by(fund_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(total_app = round(total_app / 1000000),
# use numeric variable for sizing and character for label
money = paste0("$", total_app)) %>%
treemap(
index = c("fund_description", "money"),
vSize = "total_app",
type = "index",
title = "Chicago Budget by Fund, Millions of $",
palette = "GnBu",
fontcolor.labels = c("black", "black"),
fontsize.labels = c(10),
bg.labels=c("transparent"),
align.labels = list(c("left", "top"),
c("right", "bottom")),
overlap.labels = 0,
inflate.labels = F,
border.lwds = 1)
FY21 %>%
mutate(fund_description = if_else(
!fund_description %in% top_ten_FY21$top_ten,
"MISCELLANEOUS",
fund_description
)
) %>%
group_by(fund_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(perc_total = round((total_app/sum(total_app))*100, 2)) %>%
arrange(desc(total_app)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "Chicago Budget Appropriations by Fund",
col.names = c("Fund Description", "Total Appropriation ($)", "% of Total"),
"simple",
table.placement = "H")
corp_top_ten <- FY21 %>%
filter(fund_description == "CORPORATE FUND") %>%
group_by(department_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
arrange(desc(total_app)) %>%
head(10) %>%
rename("top_ten" = department_description)
FY21 %>%
filter(fund_description == "CORPORATE FUND") %>%
mutate(department_description = if_else(
!department_description %in% corp_top_ten$top_ten,
"MISCELLANEOUS",
department_description
)
) %>%
group_by(department_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(total_app = round(total_app / 1000000),
money = paste0("$", total_app)) %>%
treemap(
index = c("department_description", "money"),
vSize = "total_app",
type = "index",
title = "Chicago Corporate Fund Appropriations, Millions of $",
palette = "GnBu",
fontsize.labels = c(10, 10),
fontcolor.labels = c("black", "black"),
bg.labels=c("transparent"),
align.labels = list(c("left", "top"),
c("right", "bottom")),
inflate.labels = F)
FY21 %>%
filter(fund_description == "CORPORATE FUND") %>%
mutate(department_description = if_else(
!department_description %in% corp_top_ten$top_ten,
"MISCELLANEOUS",
department_description
)
) %>%
group_by(department_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(perc_total = round((total_app/sum(total_app))*100, 2)) %>%
arrange(desc(total_app)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "Corporate Fund by Department",
col.names = c("Dept Description", "Total Appropriation ($)", "% of Total"),
"simple",
table.placement = "H")
ts_top_ten_pos <- ts_FY21 %>%
group_by(department_description) %>%
summarize(total_app = sum(total_budgeted_unit)) %>%
rename("top_ten" = department_description) %>%
arrange(desc(total_app)) %>%
head(10)
ts_FY21 %>%
mutate(department_description = if_else(
!department_description %in% ts_top_ten_pos$top_ten,
"MISCELLANEOUS",
department_description
)
) %>%
group_by(department_description) %>%
summarize(emply_num = sum(total_budgeted_unit),
sal_app = sum(total_budgeted_amount)) %>%
mutate(perc_total = round((emply_num/sum(emply_num))*100, 2),
perc_total_sal = round((sal_app/sum(sal_app))*100, 2)) %>%
select(department_description,
emply_num,
perc_total,
sal_app,
perc_total_sal) %>%
arrange(desc(emply_num)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "Positions by Department",
col.names = c("Department",
"Total Positions",
"% of Positions",
"Salary App. ($)",
"% Salary App."),
"simple",
table.placement = "H")
ts_FY21 %>%
group_by(department_description) %>%
summarize(emply_num = sum(total_budgeted_unit)) %>%
ggplot() +
geom_col(aes(
fct_reorder(department_description, emply_num),
emply_num,
fill = emply_num)
) +
labs(title = "Number of Salaried Positions by Department") +
scale_fill_continuous_tableau() +
theme_fivethirtyeight() +
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 8)) +
coord_flip()
FY21 %>%
filter(department_number == "57") %>%
# "expense type"
group_by(appropriation_account_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
# for better visibility, we're filtering out less than 2M
filter(total_app >= 2000000) %>%
mutate(total_app = round(total_app / 1000000)) %>%
ggplot() +
geom_col(aes(
fct_reorder(appropriation_account_description, total_app),
total_app,
fill = total_app)
) +
labs(title = "CPD 2021 Budget Appropriations",
subtitle = "Millions of Dollars") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_continuous_tableau() +
theme_fivethirtyeight() +
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 8)) +
coord_flip()
# start with long list of titles. position control == "1" indicates salary position.
# hourly positions account for about 10M
ts_FY21 %>%
filter(department_code == 57 &
position_control == "1") %>%
group_by(title_description) %>%
summarize(total_app = sum(total_budgeted_amount),
total_employed = sum(total_budgeted_unit)) %>%
arrange(desc(total_app)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "CPD Appropriation by Job Title",
col.names = c("Title Description", "Total Appropriation ($)", "Number of Employees"),
"simple",
table.placement = "H")
# we see a lot of police officers assigned with varying titles
# define peace officer title code:: https://informationportal.igchicago.org/glossary/sworn-officer/
PO_title_codes <- c("9015", "9016", "9126", "9151", "9152", "9153", "9154", "9155", "9158", "9160", "9161", "9164", "9165", "9168", "9171", "9173", "9174", "9175", "9201", "9206", "9752", "9781", "9785", "9796", "9957")
ts_FY21 %>%
filter(department_code == 57 &
position_control == "1") %>%
# label peace officers by title codes & title description
mutate(
peace_officer = case_when(
title_code %in% PO_title_codes ~ "Peace Officer",
str_detect(title_description, "Police Officer") ~ "Peace Officer",
str_detect(title_description, "Deputy Superintendent") ~ "Peace Officer",
TRUE ~ "Non Peace Officer")
) %>%
group_by(peace_officer) %>%
summarize(total_app = sum(total_budgeted_amount)/1000000) %>%
ggplot() +
geom_col(aes(peace_officer, total_app),
fill = "skyblue",
alpha = 0.7) +
labs(title = "Salary Appropriation by Job Type",
subtitle = "Millions of $") +
scale_y_continuous(labels = dollar_format()) +
theme_fivethirtyeight() +
theme(panel.grid.major.x = element_blank())
ts_FY21 %>%
filter(department_code == 57 &
position_control == "1") %>%
# label peace officers by title codes & title description
mutate(peace_officer = case_when(title_code %in% PO_title_codes ~ "Peace Officer",
str_detect(title_description, "Police Officer") ~ "Peace Officer",
str_detect(title_description, "Deputy Superintendent") ~ "Peace Officer",
TRUE ~ "Non Peace Officer")) %>%
group_by(peace_officer) %>%
summarise(av_sal = weighted.mean(budgeted_pay_rate, total_budgeted_unit),
# need to use this package to calculate weighted standard deviation
sd = sqrt(Hmisc::wtd.var(budgeted_pay_rate, total_budgeted_unit))) %>%
ggplot() +
geom_col(aes(peace_officer, av_sal),
fill = "skyblue",
alpha = 0.7) +
geom_errorbar(aes(x = peace_officer, ymin = av_sal - sd, ymax = av_sal + sd),
width = 0.4,
colour = "orange",
alpha = 0.9,
size = 1.3) +
labs(title = "Annual Salary Range by Job type") +
scale_y_continuous(labels = dollar_format()) +
theme_fivethirtyeight() +
theme(panel.grid.major.x = element_blank())
# hm. so non POs make on average significantly lesss, but the confidence intervals overlap
# just like the titles list, this is obviously unwieldy and un-interpret-able
FY21 %>%
filter(fund_code == "0683" | # policeman's annuity fund
department_number == "55" | # police department
department_number == "57" | # police board
department_number == "60" | # copa
appropriation_account_description == "CONSENT DECREE") %>% # misc consent decree
group_by(appropriation_account_description) %>%
summarise(total_app = sum(ordinance_amount)) %>%
arrange(desc(total_app)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "Total Costs",
col.names = c("Appropriation Type", "Total Appropriation ($)"),
"simple",
table.placement = "H")
medical_costs <- c(
"HOS/MED-NOT WORKER COMP",
"HOSPITAL//MEDICAL - NOT WORKERS' COMP"
)
compensation_other <- c(
"COMPENSATORY TIME PAYMENT",
"CONTRACT WAGE-PR",
"CONTRACT WAGE-SALARY",
"CONTRACT WAGE - SALARY",
"CROSSING GUARDS - VACATION PAYOUT",
"DUTY AVAILABILITY",
"FOR REIMB OTHER FUNDS",
"FRINGE BENEFITS",
"FURLOUGH / COMP TIME BUY-BACK",
"FURLOUGH/COMP TIME",
"LESS SALARY SAVINGS FROM UNPAID TIME OFF",
"PAYMENT RETROACTIVE SALARIES",
"REIMBURSABLE OVERTIME",
"SAL AND WAGES-ON VOUCHER",
"SALARIES AND WAGES - ON VOUCHER",
"SALARY PROVISION",
"SCHEDULE SALARY ADJ",
"SCHEDULE SALARY ADJUSTMENTS",
"SCHEDULED WAGE ADJUSTMENTS",
"SPECIALTY PAY",
"STIPENDS",
"SUPERVISORS QUARTERLY PAYMENT",
"SWORN/CIVILIAN HOLIDAY PREMIUM PAY",
"SWORN/CIVILIAN PAY",
"TUITION REIMBURSEMENT"
)
physical_assets <- c(
"APPARATUS AND INSTRUMENTS",
"BOOKS AND RELATED MATERIAL",
"BOOKS AND RELATED MTL",
"CLEANING AND SAN SUPPLY",
"CLEANING AND SANITATION SUPPLIES",
"CLOTHING",
"COMMUNICATION DEVICES",
"DATA CIRCUITS",
"DRUGS  MEDICINE AND CHEMICAL MATERIALS",
"DRUGS MED AND CHEM MATL S",
"EQUIPMENT",
"FOOD",
"FREIGHT AND EXPRESS CHARGES",
"FREIGHT/EXPENSE CHARGES",
"GASOLINE",
"IT MAINTENANCE",
"LEASE/PURCHASE EQUIPMENT",
"LICENSE STICKER TAG AND PLATES",
"LIVESTOCK",
"MACHINERY AND EQUIPMENT",
"MAINT FACILITIES",
"MAINTENANCE AND OPERATION - VEHICLES",
"MAINTN & OPERTN-CY VEHL",
"MATERIAL AND SUPPLIES",
"MOBILE COMM SERVICES",
"MOBILE COMMUNICATION SERVICES",
"POSTAGE",
"PUBLICATN & REPRODT-OUT",
"PUR VEHICLES-POL/FIRE",
"PURCHASE-DATA HARDWARE",
"PURCHASE - DATA HARDWARE",
"RENTAL-DATA HARDWARE EQ",
"RENTAL EQUIPMENT AND SERVICES",
"REPAIR PARTS AND MATERIAL",
"REPAIR/MAINT EQUIPMENT",
"STATIONERY AND OFFICE SUPPL",
"STATIONERY AND OFFICE SUPPLIES",
"TECH AND SCIENTIFIC EQUIP",
"TECHNICAL AND SCIENTIFIC EQUIPMENT",
"TECHNICAL MEETING COSTS",
"TELEPHONE-CENTREX",
"TELEPHONE-MAINTENANCE",
"TELEPHONE - CENTREX BILLINGS",
"TELEPHONE - MAINTENANCE",
"TELEPHONE - NON-CENTREX BILLINGS",
"TELEPHONE NON-CENTREX",
"TOOL <= $100 UNIT",
"TOOLS > $100 UNIT",
"UNIFORM ALLOWANCE",
"VEHICLES",
"VEHICLES-POLICE",
"VEHICLES - POLICE AND FIRE"
)
prof_services <- c(
"ADVERTISING",
"COURT REPORTING",
"GRAPHIC DESIGN SERV",
"OFF AND BUILDING SERV",
"OFFICE AND BUILDING SERVICES",
"OUTSIDE GRAPHIC SERVICES",
"PROF & TECHNICAL SERVICES",
"PROF SERV-IT MAINT",
"PROFESSIONAL AND TECHNICAL SERVICES",
"SOFTWARE MAINT/LICENSING",
"SOFTWARE MAINTENANCE AND LICENSING",
"STATISTICAL STUDIES",
"TESTING AND INSPECTING",
"WASTE DISPOSAL SERV",
"WASTE DISPOSAL SERVICES"
)
misc_appropriations <- c(
"CONTINGENCIES",
"CULTURAL PROGRAMMING GRANTS",
"DELEGATE AGENCIES",
"DUES  SUBSC & MEM",
"INDIRECT COSTS",
"LEGAL EXPENSES",
"LOCAL TRANSPORTATION",
"LOSS IN COLLECTION OF TAXES",
"MATCHING AND SUPPLEMENTAL GRANTS",
"PHYSICAL EXAMS",
"REIMBURSABLE TRANSFERS BETWEEN FUNDS",
"REIMBURSEMENT - 2FM",
"REIMBURSEMENT - AIS",
"REIMBURSEMENT - CPD",
"REIMBURSEMENT - DAIS",
"REIMBURSEMENT - DSS",
"REIMBURSEMENT TO TRAVELERS",
"REIMBURSEMENT TRAVELERS",
"REIMREIMB CORP",
"TRANSFER FOR SERVICES - DSS",
"TRANSPORTATION AND EXPENSE ALLOWANCE",
"VIOLENCE REDUCTION PROGRAM"
)
# so let's sort into categories of our own choosing and view with horizontal bar chart
FY21 %>%
filter(fund_code == "0683" |
department_number == "55" |
department_number == "55" | # police department
department_number == "57" | # police board
department_number == "60" | # copa
appropriation_account_description == "CONSENT DECREE") %>% # misc consent decree
mutate(
appropriation_account_description = case_when(
department_description == "COPA" ~ "COPA",
appropriation_account_description %in% compensation_other ~ "COMPENSATION - OTHER",
appropriation_account_description %in% medical_costs ~ "MEDICAL COSTS",
appropriation_account_description %in% prof_services ~ "PROFESSIONAL SERVICES",
appropriation_account_description %in% physical_assets ~ "PHYSICAL ASSETS",
appropriation_account_description %in% misc_appropriations ~ "MISCELLANEOUS",
TRUE ~ appropriation_account_description)
) %>%
group_by(appropriation_account_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(total_app = round(total_app / 1000000)) %>%
arrange(desc(total_app)) %>%
ggplot() +
geom_col(aes(
fct_reorder(appropriation_account_description, total_app),
total_app,
fill = total_app)
) +
labs(title = "Total Price by Category",
subtitle = "Millions of $") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_continuous_tableau() +
theme_fivethirtyeight() +
theme(legend.position = "none",
panel.grid.major.y = element_blank()) +
coord_flip()
setwd("D:/GitHub/cpd_budget_analysis/cpd_budget_analysis")
