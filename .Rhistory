) %>%
group_by(appropriation_account_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(total_app = round(total_app / 1000000)) %>%
arrange(desc(total_app)) %>%
ggplot() +
geom_col(aes(
fct_reorder(appropriation_account_description, total_app),
total_app,
fill = total_app)
) +
labs(title = "Total Price by Category",
subtitle = "Millions of $") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_continuous_tableau() +
theme_fivethirtyeight() +
theme(legend.position = "none",
panel.grid.major.y = element_blank()) +
coord_flip()
medical_costs <- c(
"HOS/MED-NOT WORKER COMP",
"HOSPITAL//MEDICAL - NOT WORKERS' COMP"
)
compensation_other <- c(
"COMPENSATORY TIME PAYMENT",
"CONTRACT WAGE-PR",
"CONTRACT WAGE-SALARY",
"CONTRACT WAGE - SALARY",
"CROSSING GUARDS - VACATION PAYOUT",
"DUTY AVAILABILITY",
"FOR REIMB OTHER FUNDS",
"FRINGE BENEFITS",
"FURLOUGH / COMP TIME BUY-BACK",
"FURLOUGH/COMP TIME",
"LESS SALARY SAVINGS FROM UNPAID TIME OFF",
"PAYMENT RETROACTIVE SALARIES",
"REIMBURSABLE OVERTIME",
"SAL AND WAGES-ON VOUCHER",
"SALARIES AND WAGES - ON VOUCHER",
"SALARY PROVISION",
"SCHEDULE SALARY ADJ",
"SCHEDULE SALARY ADJUSTMENTS",
"SCHEDULED WAGE ADJUSTMENTS",
"SPECIALTY PAY",
"STIPENDS",
"SUPERVISORS QUARTERLY PAYMENT",
"SWORN/CIVILIAN HOLIDAY PREMIUM PAY",
"SWORN/CIVILIAN PAY",
"TUITION REIMBURSEMENT"
)
physical_assets <- c(
"APPARATUS AND INSTRUMENTS",
"BOOKS AND RELATED MATERIAL",
"BOOKS AND RELATED MTL",
"CLEANING AND SAN SUPPLY",
"CLEANING AND SANITATION SUPPLIES",
"CLOTHING",
"COMMUNICATION DEVICES",
"DATA CIRCUITS",
"DRUGS  MEDICINE AND CHEMICAL MATERIALS",
"DRUGS MED AND CHEM MATL S",
"EQUIPMENT",
"FOOD",
"FREIGHT AND EXPRESS CHARGES",
"FREIGHT/EXPENSE CHARGES",
"GASOLINE",
"IT MAINTENANCE",
"LEASE/PURCHASE EQUIPMENT",
"LICENSE STICKER TAG AND PLATES",
"LIVESTOCK",
"MACHINERY AND EQUIPMENT",
"MAINT FACILITIES",
"MAINTENANCE AND OPERATION - VEHICLES",
"MAINTN & OPERTN-CY VEHL",
"MATERIAL AND SUPPLIES",
"MOBILE COMM SERVICES",
"MOBILE COMMUNICATION SERVICES",
"POSTAGE",
"PUBLICATN & REPRODT-OUT",
"PUR VEHICLES-POL/FIRE",
"PURCHASE-DATA HARDWARE",
"PURCHASE - DATA HARDWARE",
"RENTAL-DATA HARDWARE EQ",
"RENTAL EQUIPMENT AND SERVICES",
"REPAIR PARTS AND MATERIAL",
"REPAIR/MAINT EQUIPMENT",
"STATIONERY AND OFFICE SUPPL",
"STATIONERY AND OFFICE SUPPLIES",
"TECH AND SCIENTIFIC EQUIP",
"TECHNICAL AND SCIENTIFIC EQUIPMENT",
"TECHNICAL MEETING COSTS",
"TELEPHONE-CENTREX",
"TELEPHONE-MAINTENANCE",
"TELEPHONE - CENTREX BILLINGS",
"TELEPHONE - MAINTENANCE",
"TELEPHONE - NON-CENTREX BILLINGS",
"TELEPHONE NON-CENTREX",
"TOOL <= $100 UNIT",
"TOOLS > $100 UNIT",
"UNIFORM ALLOWANCE",
"VEHICLES",
"VEHICLES-POLICE",
"VEHICLES - POLICE AND FIRE"
)
prof_services <- c(
"ADVERTISING",
"COURT REPORTING",
"GRAPHIC DESIGN SERV",
"OFF AND BUILDING SERV",
"OFFICE AND BUILDING SERVICES",
"OUTSIDE GRAPHIC SERVICES",
"PROF & TECHNICAL SERVICES",
"PROF SERV-IT MAINT",
"PROFESSIONAL AND TECHNICAL SERVICES",
"SOFTWARE MAINT/LICENSING",
"SOFTWARE MAINTENANCE AND LICENSING",
"STATISTICAL STUDIES",
"TESTING AND INSPECTING",
"WASTE DISPOSAL SERV",
"WASTE DISPOSAL SERVICES"
)
misc_appropriations <- c(
"CONTINGENCIES",
"CULTURAL PROGRAMMING GRANTS",
"DELEGATE AGENCIES",
"DUES  SUBSC & MEM",
"INDIRECT COSTS",
"LEGAL EXPENSES",
"LOCAL TRANSPORTATION",
"LOSS IN COLLECTION OF TAXES",
"MATCHING AND SUPPLEMENTAL GRANTS",
"PHYSICAL EXAMS",
"REIMBURSABLE TRANSFERS BETWEEN FUNDS",
"REIMBURSEMENT - 2FM",
"REIMBURSEMENT - AIS",
"REIMBURSEMENT - CPD",
"REIMBURSEMENT - DAIS",
"REIMBURSEMENT - DSS",
"REIMBURSEMENT TO TRAVELERS",
"REIMBURSEMENT TRAVELERS",
"REIMREIMB CORP",
"TRANSFER FOR SERVICES - DSS",
"TRANSPORTATION AND EXPENSE ALLOWANCE",
"VIOLENCE REDUCTION PROGRAM"
)
# so let's sort into categories of our own choosing and view with horizontal bar chart
FY21 %>%
filter(fund_code == "0683" |
department_number == "55" |
department_number == "55" | # police department
department_number == "57" | # police board
department_number == "60" | # copa
appropriation_account_description == "CONSENT DECREE") %>% # misc consent decree
mutate(
appropriation_account_description = case_when(
department_description == "COPA" ~ "COPA",
appropriation_account_description %in% compensation_other ~ "COMPENSATION - OTHER",
appropriation_account_description %in% medical_costs ~ "MEDICAL COSTS",
appropriation_account_description %in% prof_services ~ "PROFESSIONAL SERVICES",
appropriation_account_description %in% physical_assets ~ "PHYSICAL ASSETS",
appropriation_account_description %in% misc_appropriations ~ "MISCELLANEOUS",
TRUE ~ appropriation_account_description)
) %>%
group_by(appropriation_account_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(total_app = round(total_app / 1000000)) %>%
arrange(desc(total_app)) %>%
ggplot() +
geom_col(aes(
fct_reorder(appropriation_account_description, total_app),
total_app,
fill = total_app)
) +
labs(title = "Total Price by Category",
subtitle = "Millions of $") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_continuous_tableau() +
theme_fivethirtyeight() +
theme(legend.position = "none",
panel.grid.major.y = element_blank()) +
coord_flip()
FY21 %>%
filter(fund_code == "0683" |
department_number == "55" |
department_number == "55" | # police department
department_number == "57" | # police board
department_number == "60" | # copa
appropriation_account_description == "CONSENT DECREE") %>% # misc consent decree
mutate(
appropriation_account_description = case_when(
department_description == "COPA" ~ "COPA",
appropriation_account_description %in% compensation_other ~ "COMPENSATION - OTHER",
appropriation_account_description %in% medical_costs ~ "MEDICAL COSTS",
appropriation_account_description %in% prof_services ~ "PROFESSIONAL SERVICES",
appropriation_account_description %in% physical_assets ~ "PHYSICAL ASSETS",
appropriation_account_description %in% misc_appropriations ~ "MISCELLANEOUS",
TRUE ~ appropriation_account_description)
) %>%
group_by(appropriation_account_description) %>%
summarize(total_app = sum(ordinance_amount)) %>%
mutate(total_app = round(total_app / 1000000)) %>%
arrange(desc(total_app)) %>%
view()
ts_FY21 %>%
group_by(department_description) %>%
summarize(emply_num = sum(total_budgeted_unit)) %>%
ggplot() +
geom_col(aes(
fct_reorder(department_description, emply_num),
emply_num,
fill = emply_num)
) +
labs(title = "Number of Salaried Positions by Department") +
scale_fill_continuous_tableau() +
theme_fivethirtyeight() +
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 8)) +
coord_flip()
ts_top_ten_pos <- ts_FY21 %>%
group_by(department_description) %>%
summarize(total_app = sum(total_budgeted_unit)) %>%
rename("top_ten" = department_description) %>%
arrange(desc(total_app)) %>%
head(10)
ts_FY21 %>%
mutate(department_description = if_else(
!department_description %in% ts_top_ten_pos$top_ten,
"MISCELLANEOUS",
department_description
)
) %>%
group_by(department_description) %>%
summarize(emply_num = sum(total_budgeted_unit),
sal_app = sum(total_budgeted_amount)) %>%
mutate(perc_total = round((emply_num/sum(emply_num))*100, 2),
perc_total_sal = round((sal_app/sum(sal_app))*100, 2)) %>%
select(department_description,
emply_num,
perc_total,
sal_app,
perc_total_sal) %>%
arrange(desc(emply_num)) %>%
kable(align = "lccrr",
format.args = list(big.mark = ","),
caption = "Positions by Department",
col.names = c("Department",
"Total Positions",
"% of Positions",
"Salary App. ($)",
"% Salary App."),
"simple",
table.placement = "H")
View(FY21)
test1 <- FY21 %>%
filter(fund_code == "0683" |
department_number == "55" |
department_number == "55" | # police department
department_number == "57" | # police board
department_number == "60" | # copa
appropriation_account_description == "CONSENT DECREE") %>%
sum(ordinance_amount) %>%
view()
test1 <- FY21 %>%
filter(fund_code == "0683" |
department_number == "55" |
department_number == "55" | # police department
department_number == "57" | # police board
department_number == "60" | # copa
appropriation_account_description == "CONSENT DECREE") %>%
summarise(x = sum(ordinance_amount)) %>%
view()
test2 <- FY21 %>%
summarise(x = sum(ordinance_amount)) %>%
view()
prop <- test1 / test2
prop
# this script retrieves and combines city of chicago budget ordinances between 2011 and 2021
library(tidyverse)
library(RSocrata)
rm(list = ls())
setwd("D:/GitHub/cpd_budget_analysis/cpd_budget_analysis")
# Full Budget Ordinances Appropriations -----------------------------------
# https://data.cityofchicago.org/browse?limitTo=datasets&q=Budget+Ordinance+-+Appropriations&sortBy=relevance
# create list of API links for city of chicago budget ordinances.
API_list_budget <- c("drv3-jzqp", # 2011
"8ix6-nb7q", # 2012
"b24i-nwag", # 2013
"ub6s-xy6e", # 2014
"qnek-cfpp", # 2015
"36y7-5nnf", # 2016
"7jem-9wyw", # 2017
"6g7p-xnsy", # 2018
"h9rt-tsn7", # 2019
"fyin-2vyd", # 2020
"6tbx-h7y2", # 2021
"ncj3-k47t") # 2022, recommended budget: https://data.cityofchicago.org/Administration-Finance/Budget-2022-Budget-Recommendations-Appropriations/ncj3-k47t
# define seed year
year = 2011
# create empty data frame to populate with for loop
budget_ordinances <- data.frame()
# build data.frame for all available budget ordinances
for (i in API_list_budget) {
# build API call corresponding to each year
x <- paste0("https://data.cityofchicago.org/resource/", i, ".json")
# pull dataset from data.cityofchicago.org
y <- read.socrata(x)
# add year column seeding at 2011
y$year = year
# iterate years for each API call. since these are ordered in the list above, it will generate the correct value for each fiscal year of the relevant budget ordinance
year = year + 1
# combine all annual budgets into a single large data.frame
budget_ordinances <- bind_rows(budget_ordinances, y)
}
# standardize variable names and values across years
budget_ordinances_clean <- budget_ordinances %>%
mutate(ordinance_amount = case_when(year == 2011 ~ amount,
year == 2013 ~ appropriation_ordinance,
TRUE ~ X_ordinance_amount_),
ordinance_amount = as.numeric(ordinance_amount)
)%>%
# remove redundant variables
select(-c(department,
amount,
appropriation_ordinance,
X_ordinance_amount_))
# save data
write_csv(budget_ordinances_clean, "data/budget_ordinances.csv")
# Positions and Salaries Appropriations --------------------------------------------------
# https://data.cityofchicago.org/browse?q=Budget%20Ordinance%20-%20Positions%20and%20Salaries&sortBy=relevance
# create list of API links
API_list_salaries <- c("g398-fhbm", # 2011
"4n2t-us8h", # 2012
"78az-bt2s", # 2013
"etzw-ycze", # 2014
"f338-e9ns", # 2015
"ipsp-k4xh", # 2016
"vcfx-7p4u", # 2017
"9d7d-7f2b", # 2018
"7zkb-yr4j", # 2019
"txys-725h", # 2020
"gcwx-xm5a", # 2021
"kwap-s85k") #2022 recommended budget: https://data.cityofchicago.org/Administration-Finance/Budget-2022-Budget-Recommendations-Positions-and-S/kwap-s85k
year = 2011
titles_salaries <- data.frame()
for (i in API_list_salaries){
x <- paste0("https://data.cityofchicago.org/resource/", i, ".json")
y <- read.socrata(x)
y$year = year
year = year + 1
titles_salaries <- bind_rows(titles_salaries, y)
}
# standardize variable names and values across years
titles_salaries_clean <- titles_salaries %>%
mutate(
# variable labels were different for several columns in 2011
schedule_grade = if_else(
is.na(schedule_grade), schedule, schedule_grade),
fund_description = if_else(
is.na(fund_description), fund_name, fund_description),
department_description = if_else(
is.na(department_description), department_name, department_description),
section_description = if_else(
is.na(section_description), section_name, section_description),
sub_section_code = if_else(
is.na(sub_section_code), subsection_code, sub_section_code),
sub_section_description = if_else(
is.na(sub_section_description), subsection_name, sub_section_description),
division_description = if_else(
is.na(division_description), division_name, division_description),
total_budgeted_unit = if_else(
is.na(total_budgeted_unit), total_budgeted_units, total_budgeted_unit),
# in 2012, department_code is labeled as department_number
department_code = if_else(
is.na(department_code), department_number, department_code)
) %>%
# remove redundant variables
select(
-c(department, # only appears in 2011
schedule,
fund_name,
department_name,
section_name,
subsection_code,
subsection_name,
division_name,
total_budgeted_units,
department_number)
) %>%
# convert non-categorical variables to numeric
mutate(total_budgeted_unit = as.numeric(total_budgeted_unit),
budgeted_pay_rate = as.numeric(budgeted_pay_rate),
total_budgeted_amount = as.numeric(total_budgeted_amount))
# save data
write_csv(titles_salaries_clean, "data/titles_salaries.csv")
ls()
glimpse(budget_ordinances_clean)
glimpse(budget_ordinances_clean)
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022)
glimpse(budget_22)
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022) %>%
select(ordinance_amount)
glimpse(titles_salaries_clean)
levels(factor(titles_salaries_clean$year))
salaries_22 <- titles_salaries_clean %>%
filter(year == 2022) %>%
glimpse()
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022) %>%
select(ordinance_amount)
salaries_22 <- titles_salaries_clean %>%
filter(year == 2022)
view(budget_22)
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022) %>%
select(-ordinance_amount)
view(budget_22)
class(budget_22$department_number)
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022 & department_number == "41") %>%
select(-ordinance_amount)
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022) %>%
select(-ordinance_amount)
CDPH_22 <- budget_22 %>%
filter(department_number == "41")
view(CDPH_22)
glimpse(CDPH_22)
glimpse(CDPH_22)
budget_22 <- budget_ordinances_clean %>%
filter(year == 2022) %>%
select(-ordinance_amount) %>%
mutate(appropriation = as.numeric(appropriation),
revised_appropriation = as.numeric(revised_appropriation),
recommendation = as.numeric(recommendation))
CDPH_22 <- budget_22 %>%
filter(department_number == "41")
view(CDPH_22)
CDPH_22 <- budget_22 %>%
filter(department_number == "41") %>%
group_by(appropriation_authority_description) %>%
summarize(total_app = sum(appropriation),
total_revised = sum(revised_appropriation),
total_rec = sum(recommendation)) %>%
view()
glimpse(CDPH_22)
glimpse(budget_22)
CDPH_22_acct <- budget_22 %>%
filter(department_number == "41") %>%
group_by(appropriation_account_description) %>%
summarize(total_app = sum(appropriation),
total_revised = sum(revised_appropriation),
total_rec = sum(recommendation)) %>%
view()
CDPH_22_prof.services <- budget_22 %>%
filter(department_number == "41" &
appropriation_account_description == "PROFESSIONAL AND TECHNICAL SERVICES") %>%
view()
CDPH_salaries <- salaries_22 %>%
filter(year == 2022 & department_code == "41") %>%
view()
CDPH_salaries <- salaries_22 %>%
filter(year == 2022 & department_code == "41") %>%
select(fund_type,
fund_description,
section_description,
title_description,
position_control,
total_budgeted_unit,
total_budgeted_amount) %>%
view()
CDPH_salaries <- salaries_22 %>%
filter(year == 2022 & department_code == "41") %>%
select(fund_type,
fund_description,
section_description,
title_description,
position_control,
total_budgeted_unit,
budgeted_pay_rate,
total_budgeted_amount) %>%
view()
CDPH_salaries <- salaries_22 %>%
filter(year == 2022 &
department_code == "41" &
position_control == "1") %>%
select(fund_type,
fund_description,
section_description,
title_description,
position_control,
total_budgeted_unit,
budgeted_pay_rate,
total_budgeted_amount) %>%
view()
CDPH_salaries <- salaries_22 %>%
filter(year == 2022 &
department_code == "41" &
position_control == "1") %>%
select(fund_type,
fund_description,
section_description,
title_description,
total_budgeted_unit,
budgeted_pay_rate,
total_budgeted_amount) %>%
view()
CDPH_22 <- budget_22 %>%
filter(department_number == "41") %>%
view()
